version: "3.7"

services:
  backend:
    image: marijndemul16/movielist.backend  
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      TMDB_API_KEY: ${TMDB_API_KEY}
      TMDB_READ_ACCESS_TOKEN: ${TMDB_READ_ACCESS_TOKEN}
      JWT_SECRET: ${JWT_SECRET}
      DEV_MODE: ${DEV_MODE}
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    image: marijndemul16/movielist.frontend  
    ports:
      - "80:80"
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  
    restart: unless-stopped
    environment:
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_CLEANUP=true 
      - WATCHTOWER_POLL_INTERVAL=30  

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
