name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  CICD-Frontend:
    runs-on: ubuntu-latest

    steps:
    - name: (Github) Checkout Code
      uses: actions/checkout@v4

    - name: (BuildX) Setup Docker BuildX
      uses: docker/setup-buildx-action@v2

    - name: (Docker) Build MovieList Frontend Docker Image
      working-directory: MovieList.Frontend/
      run: docker build . -t marijndemul16/movielist.frontend:latest

    - name: (Docker) Log Into Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: (Docker) Push The MovieList Frontend Image To Docker Hub
      run: docker push marijndemul16/movielist.frontend

  CICD-Backend:
    runs-on: ubuntu-latest

    env:
      DOTNET_INSTALL_DIR: "./.dotnet"

    steps:
    - name: (Github) Checkout Code
      uses: actions/checkout@v4

    - name: (.NET) Setup
      uses: actions/setup-dotnet@main
      with:
        dotnet-version: '8.0.x'

    - name: (.NET) Restore MovieList Backend Dependencies
      run: dotnet restore MovieList.sln

    - name: (.NET) Build MovieList Backend
      run: dotnet build --no-restore MovieList.sln 

    - name: (.NET) Test MovieList Backend
      run: dotnet test --no-build --verbosity normal MovieList.sln

    - name: (Docker) Build MovieList Backend Docker Image
      working-directory: /
      run: docker build . -t marijndemul16/movielist.backend:latest

    - name: (Docker) Log Into Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: (Docker) Push The MovieList Backend Image To Docker Hub
      run: docker push marijndemul16/movielist.backend
